name: Screen Shot

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to release"
        required: true
        default: "main"

jobs:
  build-and-test:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            architecture: "arm64" # Apple Silicon
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            architecture: "x86_64" # Intel
            args: "--target x86_64-apple-darwin"

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> "$HOME/.zprofile"
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> "$HOME/.bash_profile"
          eval "$(/opt/homebrew/bin/brew shellenv)"
          brew update

      - name: Tap the Homebrew repository
        run: |
          brew tap nomandhoni-cs/blinkeye && brew install --cask blinkeye

      - name: Install Blink Eye Cask
        run: |
          brew install --cask blinkeye
          screencapture -x /tmp/screenshot_install.png  # Take screenshot of installation process

      - name: Verify Installation
        run: |
          if [ -d "/Applications/Blink Eye.app" ]; then
            echo "Blink Eye installed successfully."
          else
            echo "Blink Eye installation failed!" && exit 1
          fi
          screencapture -x /tmp/screenshot_verify_install.png  # Screenshot after verification

      - name: Launch Blink Eye App
        run: |
          open "/Applications/Blink Eye.app"
          sleep 5  # Give the app time to load
          screencapture -x /tmp/screenshot_launch.png  # Screenshot of the launched app

      - name: Debug App Contents
        run: |
          echo "Checking Blink Eye.app contents:"
          ls -R "/Applications/Blink Eye.app"
          screencapture -x /tmp/screenshot_debug.png  # Screenshot of app contents in debug step

      - name: Test App Architecture
        run: |
          # Ensure the app binary exists
          if [ ! -f "/Applications/Blink Eye.app/Contents/MacOS/Blink-Eye" ]; then
            echo "Blink Eye binary not found!" && exit 1
          fi

          # Check the architecture of the app binary
          ARCH=$(file "/Applications/Blink Eye.app/Contents/MacOS/Blink-Eye" | awk '{print $NF}')
          echo "Detected architecture: $ARCH"

          if [ "$ARCH" != "${{ matrix.architecture }}" ]; then
            echo "Architecture test failed! Detected: $ARCH, Expected: ${{ matrix.architecture }}" && exit 1
          else
            echo "Architecture test passed! Detected: $ARCH matches ${{ matrix.architecture }}"
          fi
          screencapture -x /tmp/screenshot_architecture.png  # Screenshot of architecture check

      - name: Uninstall Blink Eye Cask
        run: |
          brew uninstall --cask blinkeye
          screencapture -x /tmp/screenshot_uninstall.png  # Screenshot of uninstallation process

      - name: Verify Uninstallation
        run: |
          if [ ! -d "/Applications/Blink Eye.app" ]; then
            echo "Blink Eye uninstalled successfully."
          else
            echo "Blink Eye uninstallation failed!" && exit 1
          fi
          screencapture -x /tmp/screenshot_verify_uninstall.png  # Screenshot after uninstallation

      - name: Upload All Screenshots
        uses: actions/upload-artifact@v4
        with:
          name: BlinkEyeScreenshots
          path: /tmp/screenshot_*.png
          retention-days: 7
