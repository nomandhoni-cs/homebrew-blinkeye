name: Update Blink Eye Cask

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-cask:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch Latest JSON with wget
        id: fetch-latest
        run: |
          # Fetch the latest JSON file using wget (handles redirects)
          wget -q https://github.com/nomandhoni-cs/blink-eye/releases/latest/download/latest.json -O latest.json

          # Check if the file is downloaded correctly
          if [ ! -s latest.json ]; then
            echo "Error: latest.json file is empty or not fetched properly"
            exit 1
          fi

          # Log the raw content of the latest.json to verify its structure
          echo "Raw JSON content:"
          cat latest.json

          # Extract version and platform URLs using jq
          VERSION=$(jq -r '.version' latest.json)
          URL_ARM=$(jq -r '.platforms["darwin-aarch64"].url' latest.json)
          URL_INTEL=$(jq -r '.platforms["darwin-x86_64"].url' latest.json)

          # Check if the extracted values are empty
          if [ -z "$VERSION" ]; then
            echo "Error: Version not found"
            exit 1
          fi
          if [ -z "$URL_ARM" ]; then
            echo "Error: ARM URL not found"
            exit 1
          fi
          if [ -z "$URL_INTEL" ]; then
            echo "Error: Intel URL not found"
            exit 1
          fi

          # Log the extracted values
          echo "VERSION=$VERSION"
          echo "URL_ARM=$URL_ARM"
          echo "URL_INTEL=$URL_INTEL"

          # Set the environment variables for use in subsequent steps
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "URL_ARM=$URL_ARM" >> $GITHUB_ENV
          echo "URL_INTEL=$URL_INTEL" >> $GITHUB_ENV

      - name: Calculate SHA256 Checksums
        id: sha256
        run: |
          # Fetch the files only if the URLs are valid
          curl -L -o BlinkEye_aarch64.tar.gz "$URL_ARM"
          curl -L -o BlinkEye_x64.tar.gz "$URL_INTEL"

          SHA256_ARM=$(sha256sum BlinkEye_aarch64.tar.gz | awk '{print $1}')
          SHA256_INTEL=$(sha256sum BlinkEye_x64.tar.gz | awk '{print $1}')

          # Log the SHA256 checksums
          echo "SHA256_ARM=$SHA256_ARM"
          echo "SHA256_INTEL=$SHA256_INTEL"

          # Set the checksums in the environment variables
          echo "SHA256_ARM=$SHA256_ARM" >> $GITHUB_ENV
          echo "SHA256_INTEL=$SHA256_INTEL" >> $GITHUB_ENV

      - name: Update Cask File
        run: |
          # Update the cask file with new version and checksums
          sed -i "s/^  version \".*\"/  version \"$VERSION\"/" Casks/blinkeye.rb
          sed -i "s/^  sha256 arm:   \".*\"/  sha256 arm:   \"$SHA256_ARM\"/" Casks/blinkeye.rb
          sed -i "s/^         intel: \".*\"/         intel: \"$SHA256_INTEL\"/" Casks/blinkeye.rb
          sed -i "s|^  url .*|  url \"https://github.com/nomandhoni-cs/blink-eye/releases/download/v#{version}/Blink.Eye_#{arch}.app.tar.gz\",|" Casks/blinkeye.rb

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add Casks/blinkeye.rb
          git commit -m "Update Blink Eye Cask to v$VERSION"
          git push origin main
